# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

/*What is the average danceability by artist*/
select artist_name, track_name, avg(danceability)
from BIT_DB.Spotifydata
group by artist_name;


/*Look at the top 10 songs and see which ones are above or below avg. energy*/
select avg(energy)from BIT_DB.Spotifydata;
Select  track_name,popularity,energy,
    (case 
        when energy > 0.64636 then "Above"
        when energy = 0.64636 then "Avg"
        else "Below"
        End) as averge
from BIT_DB.Spotifydata
order by popularity desc
limit 10;


/*What's the average danceability for the 10 most popular songs*/
select track_name,avg(danceability)
from BIT_DB.spotifydata
group by track_name
order by popularity desc
limit 10;




